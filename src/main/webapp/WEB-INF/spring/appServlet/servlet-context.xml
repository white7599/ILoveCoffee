<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">

	<!-- DispatcherServlet Context: defines this servlet's request-processing infrastructure -->
	
	<!-- Enables the Spring MVC @Controller programming model -->
	<annotation-driven />

	<!-- Handles HTTP GET requests for /resources/** by efficiently serving up static resources in the ${webappRoot}/resources directory -->
	<resources mapping="/resources/**" location="/resources/" />
	<resources mapping="/css/**" location="/css/" />
	<resources mapping="/images/**" location="/images/" />
	<resources mapping="/js/**" location="/js/" />
	<resources mapping="/slick/**" location="/slick/" />
	<resources mapping="/uploadImage/**" location="file:///D:/DEVELOPE/workspaceSpringMVCNew/mybatis/src/main/webapp/resources/uploadImg/"/>

	<!-- Resolves views selected for rendering by @Controllers to .jsp resources in the /WEB-INF/views directory -->
	<beans:bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/views/" />
		<beans:property name="suffix" value=".jsp" />
	</beans:bean>
	
	<context:component-scan base-package="my.batis.project" />
	
	<!-- file Upload -->
    <beans:bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
        <!-- max upload size in bytes -->
        <beans:property name="maxUploadSize" value="5242880" /> <!-- 5MB -->
        <!-- max size of file in memory (in bytes) -->
        <beans:property name="maxInMemorySize" value="1048576" /> <!-- 1MB -->
    </beans:bean>

	<!-- messageSource setting -->
	<beans:bean id="messageSource" class="org.springframework.context.support.ReloadableResourceBundleMessageSource">
		<beans:property name="basename" value="/WEB-INF/messages/messages"/>
		<beans:property name="defaultEncoding" value="UTF-8"/>
	</beans:bean>
	
	<!-- Locale setting -->
	<beans:bean name="localeResolver" class="org.springframework.web.servlet.i18n.SessionLocaleResolver">
		<beans:property name="defaultLocale" value="ko"/>
	</beans:bean>
	
	<!-- 인터셉터 객체 생성 -->
	<beans:bean id="loginInterceptor" class="my.batis.project.interceptor.LoginInterceptor">
	</beans:bean>
	<!-- Interceptor 설정 -->
	<interceptors>
	    <interceptor>
	        <mapping path="/admin/productTypeList"/> 
	        <mapping path="/admin/productTypeReg"/> 
	        <mapping path="/admin/productListPage"/> 
	        <mapping path="/admin/productReg"/> 
	        <mapping path="/admin/orderList"/> 
	        <mapping path="/admin/memberList"/> 
	        <mapping path="/admin/noticeList"/> 
	        <mapping path="/admin/noticeReg"/> 
	        <mapping path="/admin/faqList"/> 
	        <!-- <mapping path="/myorderlist"/> -->
	        <beans:ref bean="loginInterceptor"/>
	    </interceptor>
	</interceptors>	
	
	<!-- <beans:bean id="tilesviewResolver" class="org.springframework.web.servlet.view.tiles3.TilesViewResolver" />
	tilesviewResolver로 받아서, jsp페이지를 뿌려준다.
	 
	<beans:bean id="tilesConfigurer" class="org.springframework.web.servlet.view.tiles3.TilesConfigurer">
	    <beans:property name="definitions">
	        <beans:list>
	            <beans:value>/WEB-INF/tilesdef/tilesdef.xml</beans:value>
	        </beans:list>
	    </beans:property>
	 
		<beans:property name="preparerFactoryClass" value="org.springframework.web.servlet.view.tiles3.SpringBeanPreparerFactory" />
	</beans:bean> -->
	
	
	
	

	
	
</beans:beans>
